"""
###############################################################################
ğŸ“¦ Estimatron 3.0 â€” MÃ³dulo: xml_converter
Gera um XML tÃ©cnico e validÃ¡vel com base nas mÃ©tricas extraÃ­das do modelo UML.
Esse XML serÃ¡ validado posteriormente contra um schema XSD no pipeline tÃ©cnico.

Autor: MOACYR + Copilot
###############################################################################
"""

import xml.etree.ElementTree as ET
from fastapi import FastAPI
from typing import Dict

def gerar_xml(metricas: Dict[str, int]) -> str:
    """
    Gera uma string XML estruturada a partir das mÃ©tricas do modelo UML.

    ParÃ¢metros:
        metricas (dict): DicionÃ¡rio contendo:
            - casosdeuso (int)
            - classes (int)
            - linhas_estimadas (int)

    Retorna:
        str: XML em formato string pronto para validaÃ§Ã£o via XSD.
    """
    # ğŸ”§ CriaÃ§Ã£o do elemento raiz
    raiz = ET.Element("ModeloUML")

    # ğŸ“Š InserÃ§Ã£o de elementos filhos com as mÃ©tricas
    ET.SubElement(raiz, "CasosDeUso").text = str(metricas.get("casosdeuso", 0))
    ET.SubElement(raiz, "Classes").text = str(metricas.get("classes", 0))
    ET.SubElement(raiz, "LinhasEstimadas").text = str(metricas.get("linhas_estimadas", 0))

    # ğŸ”„ GeraÃ§Ã£o da string XML final
    xml_string = ET.tostring(raiz, encoding="utf-8", method="xml").decode("utf-8")
    return xml_string
